const express =require('express');// this will create an express application which will allow to connect with the client side.
const http=require('http');//we also require http package,
const cors=require('cors');// to allow the connection for everyone
const mongoose=require('mongoose');// used to create a connection between the databases.
require('dotenv').config();// allow us to read the variables from dotenv file.
const socketServer = require("./socketServer");

const authRoutes = require('./routes/authRoutes');
const friendInvitationRoutes = require("./routes/friendInvitationRoutes");

const PORT =process.env.PORT || process.env.API_PORT//here we are defining our port for our application which we will use during hosting.(PORT is automatically generating while hosting and API_PORT is generated by user itself)

const app =express(); // used to create an express application
app.use(express.json()); //in that all th data that is coming is converted into json format.
app.use(cors());//it helps to tell application that we use  now cors as a middleware that data is coming from express.json to cors.

//register the routes
app.use('/api/auth',authRoutes);
app.use("/api/friend-invitation", friendInvitationRoutes);


const server =http.createServer(app); //in that we create a http server and in that we pass our express application that we created 
socketServer.registerSocketServer(server);
mongoose.set('strictQuery', false);

mongoose.connect(process.env.MONGO_URI)//it is a package that allow us to work with mongoDB database very easily.(because we have a simple function which will allow us to just create a new documents in our database).
.then(() => {
    server.listen(PORT, () => {
        console.log(`Server is listening on ${PORT}`);
    });//to start the server
} )
.catch((err) => {
    console.log('database connection failed.Server not started');
    console.error(err);

})
